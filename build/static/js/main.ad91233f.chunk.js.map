{"version":3,"sources":["helpers.js","Navbar.js","CartIcons.js","actions.js","actionTypes.js","Cart.js","ProductDetails.js","ProductList.js","Routes.js","App.js","serviceWorker.js","rootReducer.js","index.js"],"names":["calculateCartTotal","products","cart","discountAmount","total","id","price","quantity","totalWithDiscount","toFixed","Navbar","itemCount","useSelector","st","totalQuantity","calculateTotalQuantity","cartItems","cartValue","itemUnit","className","to","CartIcons","dispatch","useDispatch","onClick","type","addToCart","removeFromCart","Cart","useState","discount","setDiscount","discountApplied","Object","keys","length","itemRows","map","key","name","renderTable","onSubmit","evt","preventDefault","applyDiscount","htmlFor","value","onChange","target","ProductDetails","useParams","image_url","description","src","alt","ProductList","productCards","Routes","path","exact","App","Boolean","window","location","hostname","match","validDiscounts","REMOVE10","REMOVE20","REMOVE30","DEFAULT_STATE","data","rootReducer","state","action","cartCopy","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ad91233f.chunk.js","sourcesContent":["// calculate the total price rounded to two decimals\n// toFixed returns a string so we convert to a number\n// discount amount is a % amount from redux\nexport function calculateCartTotal(products, cart, discountAmount = 0) {\n  let total = 0;\n  for (let id in products) {\n    const { price } = products[id];\n    const quantity = cart[id] || 0;\n    total += price * quantity;\n  }\n  let totalWithDiscount = total * (1 - discountAmount);\n  return totalWithDiscount.toFixed(2); // .toFixed(2) method converts a number into a string, rounding to 2 decimals\n}\n\n// can't just calculate the length so we sum the quantity key for each item\nexport function calculateTotalQuantity(cart) {\n  let totalQuantity = 0;\n  for (let id in cart) {\n    totalQuantity += cart[id];\n  }\n  return totalQuantity;\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { calculateTotalQuantity } from \"./helpers\";\n\nfunction Navbar() {\n  const itemCount = useSelector(st => calculateTotalQuantity(st.cartItems));\n  const cartValue = useSelector(st => st.cartValue);\n  const itemUnit = itemCount === 1 ? \"item\" : \"items\";\n  return (\n    <nav className=\"navbar navbar-light bg-info\">\n      <Link to=\"/\" className=\"navbar-brand text-light\">\n        SHOPLY!\n      </Link>\n      <ul className=\"navbar-nav flex-row\">\n        <li className=\"nav-item pr-3\">\n          <span className=\"navbar-text text-light\">\n            {itemCount} {itemUnit} (${cartValue})\n          </span>\n        </li>\n        <li className=\"nav-item\">\n          <Link to=\"/cart\" className=\"nav-link text-light\">\n            See Cart\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addToCart, removeFromCart } from \"./actions\";\nimport \"./CartIcons.css\";\n\nfunction CartIcons({ id }) {\n  const dispatch = useDispatch();\n  const add = () => dispatch(addToCart(id));\n  const remove = () => dispatch(removeFromCart(id));\n  return (\n    <div className=\"d-flex justify-content-between\">\n      <i\n        onClick={add}\n        className=\"CartIcon fas fa-cart-plus fa-2x text-success\"\n      />\n      <i\n        onClick={remove}\n        className=\"CartIcon fas fa-cart-arrow-down fa-2x text-danger\"\n      />\n    </div>\n  );\n}\n\nexport default CartIcons;\n","import { ADD_TO_CART, REMOVE_FROM_CART, APPLY_DISCOUNT } from \"./actionTypes\";\n\nexport function addToCart(id) {\n  return {\n    type: ADD_TO_CART,\n    id\n  };\n}\n\nexport function removeFromCart(id) {\n  return {\n    type: REMOVE_FROM_CART,\n    id\n  };\n}\n\nexport function applyDiscount(discount) {\n  return { type: APPLY_DISCOUNT, discount };\n}\n","export const ADD_TO_CART = \"ADD_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const APPLY_DISCOUNT = \"APPLY_DISCOUNT\";","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { applyDiscount } from \"./actions\";\nimport CartIcons from \"./CartIcons\";\n\nfunction Cart() {\n  const [discount, setDiscount] = useState(\"\");\n  const dispatch = useDispatch();\n  const {\n    cartItems,\n    cartValue,\n    discountAmount,\n    discountApplied,\n    products\n  } = useSelector(st => st);\n\n  const handleChange = evt => {\n    setDiscount(evt.target.value);\n  };\n\n  const handleDiscount = evt => {\n    evt.preventDefault();\n    dispatch(applyDiscount(discount));\n    setDiscount(\"\");\n  };\n\n  const renderTable = () => {\n    const itemRows = Object.keys(cartItems).map(id => (\n      <tr key={id}>\n        <td className=\"text-center align-middle\">\n          <Link to={`/products/${id}`}>{products[id].name}</Link>\n        </td>\n        <td className=\"text-center align-middle\">${products[id].price}</td>\n        <td className=\"text-center align-middle\">{cartItems[id]}</td>\n        <td>\n          <CartIcons id={id} />\n        </td>\n      </tr>\n    ));\n\n    return (\n      <>\n        <h1 className=\"mt-5\">Your shopping cart:</h1>\n        <table className=\"table table-bordered table-striped mt-4\">\n          <thead>\n            <tr>\n              <th>Item Name</th>\n              <th>Item Price</th>\n              <th>Item Quantity</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>{itemRows}</tbody>\n        </table>\n      </>\n    );\n  };\n\n  return (\n    <>\n      {Object.keys(cartItems).length === 0 ? (\n        <h2>Your cart is empty!</h2>\n      ) : (\n        <div>\n          {renderTable()}\n          <p>\n            Total: ${cartValue}\n            {discountApplied ? (\n              <span className=\"text-success\">\n                - You saved {(discountAmount * 100).toFixed(0)}%!\n              </span>\n            ) : null}\n          </p>\n\n          <form onSubmit={handleDiscount} className=\"form-inline\">\n            <label htmlFor=\"discount\">Discount:</label>\n            <input\n              id=\"discount\"\n              value={discount}\n              onChange={handleChange}\n              name=\"discount\"\n              type=\"text\"\n              className=\"form-control ml-2 mr-2\"\n            />\n            <button className=\"btn btn-primary\">Apply Discount</button>\n          </form>\n        </div>\n\n      )}\n      < Link to=\"/\" className=\"btn btn-block btn-link\" >\n        Go to product list\n</Link >\n    </>\n  )\n}\n\nexport default Cart;\n","import React from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport CartIcons from \"./CartIcons\";\nimport \"./ProductDetails.css\";\n\nfunction ProductDetails() {\n  const { id } = useParams();\n  const { image_url, name, price, description } = useSelector(st => ({\n    ...st.products[id]\n  }));\n  return (\n    <>\n      <h4 className=\"mt-4\">Product details:</h4>\n      <div className=\"row justify-content-center border\">\n        <div className=\"col-md-4\">\n          <h2>{name}</h2>\n          <img\n            className=\"ProductDetails-img card-img-top\"\n            src={image_url}\n            alt={name}\n          />\n          <div className=\"card-body\">\n            <div className=\"d-flex justify-content-between\">\n              <h5>Price:</h5>\n              <p>${price}</p>\n            </div>\n            <p className=\"text-center\">{description}</p>\n            <CartIcons id={id} />\n          </div>\n          <Link to=\"/\" className=\"btn btn-block btn-link\">\n            Go back\n        </Link>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default ProductDetails;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport CartIcons from \"./CartIcons\";\n\nfunction ProductList() {\n  const products = useSelector(st => st.products);\n  const productCards = Object.keys(products).map(id => (\n    <div className=\"col-md-3 mb-3 mt-5\" key={id}>\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <h4 className=\"card-title text-center\">\n            <Link to={`/products/${id}`}>{products[id].name}</Link>\n          </h4>\n          <CartIcons id={id} />\n        </div>\n      </div>\n    </div>\n  ));\n  return (\n    <div>\n      <h1 className=\"mt-3\">Welcome to Shoply!</h1>\n      <h4>Look at all of our beautiful products!</h4>\n      <div className=\"row\">{productCards}</div>\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React from \"react\";\nimport { Switch, Redirect, Route } from \"react-router-dom\";\nimport Cart from \"./Cart\";\nimport ProductDetails from \"./ProductDetails\";\nimport ProductList from \"./ProductList\";\n\nfunction Routes() {\n  return (\n    <Switch>\n      <Route path=\"/\" exact>\n        <ProductList />\n      </Route>\n      <Route path=\"/products/:id\" exact>\n        <ProductDetails />\n      </Route>\n      <Route path=\"/cart\" exact>\n        <Cart />\n      </Route>\n      <Redirect to=\"/\" />\n    </Switch>\n  );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./Navbar\";\nimport Routes from \"./Routes\";\n\nfunction App() {\n  return (\n    <main>\n      <Navbar />\n      <div className=\"container\">\n        <Routes />\n      </div>\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { ADD_TO_CART, REMOVE_FROM_CART, APPLY_DISCOUNT } from \"./actionTypes\";\nimport { calculateCartTotal } from \"./helpers\";\nimport data from \"./data.json\";\n\nconst validDiscounts = {\n  REMOVE10: 0.1,\n  REMOVE20: 0.2,\n  REMOVE30: 0.3\n};\n\nconst DEFAULT_STATE = {\n  products: data.products,\n  cartItems: {},\n  cartValue: 0.0,\n  discountApplied: false,\n  discountAmount: 0\n};\n\nfunction rootReducer(state = DEFAULT_STATE, action) {\n  switch (action.type) {\n    case ADD_TO_CART: {\n      const cartCopy = { ...state.cartItems };\n      cartCopy[action.id] = (cartCopy[action.id] || 0) + 1;\n      return {\n        ...state,\n        cartItems: cartCopy,\n        cartValue: calculateCartTotal(\n          state.products,\n          cartCopy,\n          state.discountAmount\n        )\n      };\n    }\n    case REMOVE_FROM_CART: {\n      const cartCopy = { ...state.cartItems };\n      if (!cartCopy[action.id]) return state;\n      cartCopy[action.id]--;\n      if (cartCopy[action.id] === 0) {\n        delete cartCopy[action.id];\n      }\n      return {\n        ...state,\n        cartItems: cartCopy,\n        cartValue: calculateCartTotal(\n          state.products,\n          cartCopy,\n          state.discountAmount\n        )\n      };\n    }\n    case APPLY_DISCOUNT: {\n      if (\n        state.discountApplied === false &&\n        validDiscounts[action.discount]\n      ) {\n        const discountAmount = validDiscounts[action.discount];\n        return {\n          ...state,\n          cartValue: calculateCartTotal(\n            state.products,\n            state.cartItems,\n            discountAmount\n          ),\n          discountApplied: true,\n          discountAmount\n        };\n      }\n      return state;\n    }\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { createStore } from \"redux\";\nimport rootReducer from \"./rootReducer\";\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <Route path=\"/\" component={App} />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}